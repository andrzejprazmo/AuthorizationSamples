{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, map, Observable, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/authorization.service\";\nexport let ApiInterceptor = /*#__PURE__*/(() => {\n  class ApiInterceptor {\n    constructor(router, authService) {\n      this.router = router;\n      this.authService = authService;\n      this.refreshMode = false;\n    }\n\n    intercept(request, next) {\n      return next.handle(request).pipe(map(res => res), catchError(error => {\n        if (error.status == 401) {\n          this.authService.signOut();\n          this.router.navigate(['./login']);\n        }\n\n        return throwError(() => error);\n      }));\n    }\n\n  }\n\n  ApiInterceptor.ɵfac = function ApiInterceptor_Factory(t) {\n    return new (t || ApiInterceptor)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthorizationService));\n  };\n\n  ApiInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiInterceptor,\n    factory: ApiInterceptor.ɵfac\n  });\n  return ApiInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}